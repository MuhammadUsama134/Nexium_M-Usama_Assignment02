{
  "name": "Blog Summarizer Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "blog-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Blog URL Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "blog-summarizer-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.body.url }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "validate-url",
      "name": "Validate URL",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "url": "={{ $json.body.webhook_url || 'http://localhost:3000' }}/api/summarize",
        "options": {
          "bodyContentType": "json",
          "timeout": 60000
        },
        "bodyParametersJson": "={{ JSON.stringify({url: $json.body.url}) }}"
      },
      "id": "process-blog",
      "name": "Process Blog Content",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "operation": "insert",
        "table": "blog_summaries",
        "columns": "id, url, title, summary, urdu_summary, word_count, summary_method, processing_time",
        "additionalFields": {
          "upsert": true
        }
      },
      "id": "store-supabase",
      "name": "Store in Supabase",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [900, 120],
      "credentials": {
        "supabaseApi": {
          "id": "supabase-credentials",
          "name": "Supabase API"
        }
      }
    },
    {
      "parameters": {
        "operation": "insertOne",
        "collection": "blog_contents",
        "fields": "url, title, content, scraped_at, summary_id, word_count, metadata"
      },
      "id": "store-mongodb",
      "name": "Store in MongoDB",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1,
      "position": [900, 280],
      "credentials": {
        "mongoDb": {
          "id": "mongodb-credentials",
          "name": "MongoDB"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: true, message: 'Blog processed successfully', data: $json } }}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1340, 200]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { success: false, error: 'URL is required' } }}",
        "options": {
          "responseCode": 400
        }
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 400]
    },
    {
      "parameters": {
        "operation": "insertOne",
        "collection": "processing_logs",
        "fields": "url, status, timestamp, processing_time, error_message"
      },
      "id": "log-processing",
      "name": "Log Processing",
      "type": "n8n-nodes-base.mongoDb",
      "typeVersion": 1,
      "position": [1120, 320],
      "credentials": {
        "mongoDb": {
          "id": "mongodb-credentials",
          "name": "MongoDB"
        }
      }
    }
  ],
  "connections": {
    "Blog URL Webhook": {
      "main": [
        [
          {
            "node": "Validate URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate URL": {
      "main": [
        [
          {
            "node": "Process Blog Content",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Blog Content": {
      "main": [
        [
          {
            "node": "Store in Supabase",
            "type": "main",
            "index": 0
          },
          {
            "node": "Store in MongoDB",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store in Supabase": {
      "main": [
        [
          {
            "node": "Log Processing",
            "type": "main",
            "index": 0
          },
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Store in MongoDB": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "timezone": "UTC"
  },
  "versionId": "1.0.0"
}